:py:mod:`ansys.tools.repo_sync.repo_sync`
=========================================

.. py:module:: ansys.tools.repo_sync.repo_sync


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   ansys.tools.repo_sync.repo_sync.include_patterns
   ansys.tools.repo_sync.repo_sync.synchronize



.. py:function:: include_patterns(*patterns)

   
   Include listed patterns in ``copytree()``.

   Factory function that can be used with ``copytree()`` ignore parameter.

   Arguments define a sequence of glob-style patterns
   that are used to specify which files to NOT ignore.

   Creates and returns a function that determines this for each directory
   in the file hierarchy rooted at the source directory when used with
   shutil.copytree().















   ..
       !! processed by numpydoc !!

.. py:function:: synchronize(owner: str, repository: str, token: str, from_dir: str, to_dir: str, include_manifest: str, branch_checked_out: str = 'main', dry_run: bool = False, skip_ci: bool = False, random_branch_name: bool = False)

   
   Synchronize a folder to a remote repository.


   :Parameters:

       **owner** : :class:`python:str`
           Repository owner (user or organization).

       **repository** : :class:`python:str`
           Repository name.

       **token** : :class:`python:str`
           GitHub access token.

       **from_dir** : :class:`python:str`
           Directory from which files want to be synced.

       **to_dir** : :class:`python:str`
           Directory to which files want to be synced (w.r.t. the root of the repository).

       **include_manifest** : :class:`python:str`
           Path to manifest which mentions accepted extension files.

       **branch_checked_out** : :class:`python:str`, :obj:`optional`
           Branch to check out, by default "main".

       **dry_run** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`
           Simulate the behavior of the synchronization without performing it, by default ``False``.

       **skip_ci** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`
           Whether to add a ``[skip ci]`` prefix to the commit message or not. By default ``False``.

       **random_branch_name** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`
           For testing purposes - generates a random suffix for the branch name ``sync/file-sync``.














   ..
       !! processed by numpydoc !!

