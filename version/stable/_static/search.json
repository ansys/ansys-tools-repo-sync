[{"objectID":"Home","href":"api/ansys/tools/repo_sync/index.html#the-ansystoolsrepo_sync-library","title":"The ansys.tools.repo_sync library","text":"The ansys.tools.repo_sync library\n\n"},{"objectID":"Home","href":"api/ansys/tools/repo_sync/index.html#summary","title":"The ansys.tools.repo_sync library > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\n__main__\n\nTool to copy the content of one repo toward an other.\n\nconstants\n\nModule containing constants for the repo sync tool.\n\nrepo_sync\n\nModule containing the sync tool implementation.\n\nFunctions\n\n\n\n\n\nsynchronize\n\nSynchronize a folder to a remote repository.\n\nConstants\n\n\n\n\n\nDEFAULT_BRANCH_NAME\n\nDefault branch name for the synchronization process.\n\nDEFAULT_PULL_REQUEST_TITLE\n\nDefault title for the pull request created during synchronization.\n\n"},{"objectID":"Home","href":"api/ansys/tools/repo_sync/index.html#description","title":"The ansys.tools.repo_sync library > Description","text":"Description\n\nTool to synchronize the content of different repositories."},{"objectID":"Home","href":"api/ansys/tools/repo_sync/index.html#module-detail","title":"The ansys.tools.repo_sync library > Module detail","text":"Module detail"},{"objectID":"Home","href":"api/ansys/tools/repo_sync/repo_sync/index.html#the-repo_syncpy-module","title":"The repo_sync.py module","text":"The repo_sync.py module\n\n"},{"objectID":"Home","href":"api/ansys/tools/repo_sync/repo_sync/index.html#summary","title":"The repo_sync.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\ninclude_patterns\n\nInclude listed patterns in copytree().\n\nadapt_regex_from_manifest\n\nAdapt regex expressions from manifest read.\n\ndelete_folder_contents\n\nDelete the content inside a folder without deleting the folder itself.\n\nsynchronize\n\nSynchronize a folder to a remote repository."},{"objectID":"Home","href":"api/ansys/tools/repo_sync/repo_sync/index.html#description","title":"The repo_sync.py module > Description","text":"Description\n\nModule containing the sync tool implementation."},{"objectID":"Home","href":"api/ansys/tools/repo_sync/repo_sync/index.html#module-detail","title":"The repo_sync.py module > Module detail","text":"Module detail\n\n\n\nrepo_sync.include_patterns(*patterns)\n\nInclude listed patterns in copytree().\n\nFactory function that can be used with copytree() ignore parameter.\n\nArguments define a sequence of glob-style patterns\nthat are used to specify which files to NOT ignore.\n\nCreates and returns a function that determines this for each directory\nin the file hierarchy rooted at the source directory when used with\nshutil.copytree().\n\n\n\nrepo_sync.adapt_regex_from_manifest(accepted_extensions: List[str]) -> List[str]\n\nAdapt regex expressions from manifest read.\n\nParameters\n\naccepted_extensions\n\nList[python:str]\n\nList of accepted extensions coming from manifest file.\n\nReturns\n\nList[python:str]\n\nList of accepted extensions coming from manifest file (adapted).\n\n\n\nrepo_sync.delete_folder_contents(folder_path: str, accepted_extensions: List[str], clean_to_dir_based_on_manifest: bool)\n\nDelete the content inside a folder without deleting the folder itself.\n\nParameters\n\nfolder_path\n\npython:str\n\nPath to the folder whose content is requested to be deleted.\n\naccepted_extensions\n\nList[python:str]\n\nList of accepted extensions coming from manifest file.\n\nclean_to_dir_based_on_manifest\n\nbool\n\nWhether to perform the cleanup of files that match the regex\nin the manifest.\n\n\n\nrepo_sync.synchronize(owner: str, repository: str, token: str, from_dir: str, to_dir: str, include_manifest: str, branch_checked_out: str = 'main', clean_to_dir: bool = False, clean_to_dir_based_on_manifest: bool = False, dry_run: bool = False, skip_ci: bool = False, random_branch_name: bool = False, target_branch_name: str = DEFAULT_BRANCH_NAME, pull_request_title: str = DEFAULT_PULL_REQUEST_TITLE) -> str | None\n\nSynchronize a folder to a remote repository.\n\nParameters\n\nowner\n\npython:str\n\nRepository owner (user or organization).\n\nrepository\n\npython:str\n\nRepository name.\n\ntoken\n\npython:str\n\nGitHub access token.\n\nfrom_dir\n\npython:str\n\nDirectory from which files want to be synced.\n\nto_dir\n\npython:str\n\nDirectory to which files want to be synced (w.r.t. the root of the repository).\n\ninclude_manifest\n\npython:str\n\nPath to manifest which mentions accepted extension files.\n\nbranch_checked_out\n\npython:str, optional\n\nBranch to check out, by default “main”.\n\nclean_to_dir\n\nbool, optional\n\nDelete the content inside the directory where the files will be synced, by default False.\n\nclean_to_dir_based_on_manifest\n\nbool, optional\n\nIn case clean_to_dir is requested, perform the cleanup of files that match the regex\nin the manifest. By default, False. If clean_to_dir is False, this option will\nnot have an effect.\n\ndry_run\n\nbool, optional\n\nSimulate the behavior of the synchronization without performing it, by default False.\n\nskip_ci\n\nbool, optional\n\nWhether to add a [skip ci] prefix to the commit message or not. By default False.\n\nrandom_branch_name\n\nbool, optional\n\nFor testing purposes - generates a random suffix for the branch name.\n\ntarget_branch_name\n\npython:str, optional\n\nName of the branch to create for the synchronization, by default it is ‘sync/file-sync’.\n\npull_request_title\n\npython:str, optional\n\nTitle of the pull request created after synchronization, by default it is\n‘sync: file sync performed by ansys-tools-repo-sync’.\n\nReturns\n\nUnion[python:str, python:None]\n\nPull request URL. In case of dry-run or no files modified, None is returned."},{"objectID":"Home","href":"api/ansys/tools/repo_sync/__main__/index.html#the-__main__py-module","title":"The __main__.py module","text":"The __main__.py module\n\n"},{"objectID":"Home","href":"api/ansys/tools/repo_sync/__main__/index.html#summary","title":"The __main__.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\nsynchronize\n\nCLI command to execute the repository synchronization."},{"objectID":"Home","href":"api/ansys/tools/repo_sync/__main__/index.html#description","title":"The __main__.py module > Description","text":"Description\n\nTool to copy the content of one repo toward an other.\n\nRun with:"},{"objectID":"Home","href":"api/ansys/tools/repo_sync/__main__/index.html#module-detail","title":"The __main__.py module > Module detail","text":"Module detail\n\n\n\n__main__.synchronize(owner, repository, token, from_dir, to_dir, include_manifest, branch_checked_out, clean_to_dir, clean_to_dir_based_on_manifest, dry_run, skip_ci, random_branch_name, target_branch_name, pull_request_title)\n\nCLI command to execute the repository synchronization."},{"objectID":"Home","href":"index.html#ansys-tools-repo-sync","title":"ansys-tools-repo-sync","text":"ansys-tools-repo-sync\n\n       \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe ansys-tools-repo-sync library is intended to synchronize the content\nof two different repositories."},{"objectID":"Home","href":"index.html#what-does-this-library-do","title":"ansys-tools-repo-sync > What does this library do?","text":"What does this library do?\n\nFor instance, due to intellectual properties concerns, it might not be possible\nto expose publicly the entire content of a private repository.\nIts owner could decide to have a second repository, a public one.\nPart of the content for this public repo would come from the private repository.\n\nansys-tools-repo-sync allows you to do so by copying a folder and its content\nfrom one repo to the other.\n\nBy default, nothing is synced to the secondary repository (in order to avoid undesired\ncontent). For that purpose, users have to provide a manifest file (in ASCII format)\nthat contains regular expressions for the files accepted.\n\nFor example, if we wanted to sync all *.py files, one should generate a\nmanifest file as follows:"},{"objectID":"Home","href":"index.html#how-to-use-it","title":"ansys-tools-repo-sync > How to use it?","text":"How to use it?\n\nA common usage for this tool consist to integrate it in one of your CI/CD pipeline or workflow.\nFirstly, the tool must be installed.\n\nThen, it can be used in the considered workflow with the appropriate arguments.\n\nRun it as follows:\n\nThe options above are compulsory in order to run the tool. If an option is missing,\nthe operation will fail. For more information on all the available options for this tool,\nusers can run:\n\nThe --dry-run flag can be set while establishing the entire\nworkflow for the first time. It helps preventing unnecessary commits\nof sensitive data. It will print the content expected to be committed in the\npublic repository."},{"objectID":"Home","href":"index.html#issues","title":"ansys-tools-repo-sync > Issues","text":"Issues\n\nTo post issues, questions, and code, go to ansys-tools-repo-sync Issues."},{"objectID":"Home","href":"index.html#license","title":"ansys-tools-repo-sync > License","text":"License\n\nansys-tools-repo-sync is licensed under the MIT license.\n\n"},{"objectID":"Home","href":"api/ansys/tools/repo_sync/constants/index.html#the-constantspy-module","title":"The constants.py module","text":"The constants.py module\n\n"},{"objectID":"Home","href":"api/ansys/tools/repo_sync/constants/index.html#summary","title":"The constants.py module > Summary","text":"Summary\n\nConstants\n\n\n\n\n\nDEFAULT_BRANCH_NAME\n\nDefault branch name for the synchronization process.\n\nDEFAULT_PULL_REQUEST_TITLE\n\nDefault title for the pull request created during synchronization."},{"objectID":"Home","href":"api/ansys/tools/repo_sync/constants/index.html#description","title":"The constants.py module > Description","text":"Description\n\nModule containing constants for the repo sync tool."},{"objectID":"Home","href":"api/ansys/tools/repo_sync/constants/index.html#module-detail","title":"The constants.py module > Module detail","text":"Module detail\n\n\n\nconstants.DEFAULT_BRANCH_NAME = 'sync/file-sync'\n\nDefault branch name for the synchronization process.\n\n\n\nconstants.DEFAULT_PULL_REQUEST_TITLE = 'sync: file sync performed by ansys-tools-repo-sync'\n\nDefault title for the pull request created during synchronization."},{"objectID":"Home","href":"api/index.html#api-reference","title":"API reference","text":"API reference\n\nThis section describes ansys-tools-repo-sync endpoints, their capabilities, and how\nto interact with them programmatically.\n\n"}]